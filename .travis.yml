language: java

jdk: openjdk11

services:
  - docker

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  npm: true
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

before_install:
  - rm "${JAVA_HOME}/lib/security/cacerts"
  - ln -s /etc/ssl/certs/java/cacerts "${JAVA_HOME}/lib/security/cacerts"

  - nvm install $(cat .nvmrc)
  - nvm use
  - npm ci
  - npm i cloc -g

script:
  - ./gradlew build --scan -s

jobs:
  include:
    - stage: core
      name: "Training Core Contributions"
      if: branch = master AND type != pull_request AND fork = false
      script:
        - ./gradlew check --info

    - stage: training
      name: "Completed Training Evaluation"
      if: type = pull_request
      script:
        # Capture the chosen training by the feature branch name, which must be the same
        - TRAINING=$TRAVIS_PULL_REQUEST_BRANCH
        - echo "Pre Evaluation and Stastistics for $TRAINING"

        # General training code statistics
        - cloc $TRAINING

        # Pre evaluate training
        - ./gradlew :$TRAINING check
        # - cd $TRAINING && node evaluate-training
